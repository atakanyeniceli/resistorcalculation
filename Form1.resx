<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>